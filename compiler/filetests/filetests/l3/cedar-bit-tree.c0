/*
(
 (kind (CompileAndRun))
 (trace)
)
*/

int tree_up_left(int tree)
{
	int n1; int n2; int n4; int n8;
	n1 = (tree >> 1) & 1;
	n2 = ((tree >> 3) & 3) << 1;
	n4 = ((tree >> 7) & 15) << 3;
	n8 = ((tree >> 15) & 255) << 7;
	return n1 | n2 | n4 | n8;
}

int tree_up_right(int tree)
{
	int n1; int n2; int n4; int n8;
	n1 = (tree >> 2) & 1;
	n2 = ((tree >> 5) & 3) << 1;
	n4 = ((tree >> 11) & 15) << 3;
	n8 = ((tree >> 23) & 255) << 7;
	return n1 | n2 | n4 | n8;	
}

int tree_traverse(int tree)
{
	int left; int right; int lsum; int rsum; int lres; int rres;

	if(tree == 0)
		return 0;

	left = tree_traverse(tree_up_left(tree));
	right = tree_traverse(tree_up_right(tree));

	lsum = (tree & 1) + left & 7;
	rsum = (tree & 1) + right & 7;
	lres = (left >> 3) & 15;
	rres = (right >> 3) & 15;
	if(lsum >= rsum)
		return lsum | (lres << 4);
	else
		return rsum | (((rres << 1) | 1) << 3);
}

int main()
{
	return tree_traverse(1349201357);
}
----
93
