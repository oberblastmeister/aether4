/*
(
 (kind (CompileAndRun ))
 (trace)
 (emit (Abs_asm Asm))
)
*/

extern int c0_to_float(int x);
extern int c0_fdiv(int x, int y);
extern void c0_print_float(int x);
extern void c0_print_hex(int n);
extern void c0_print_char(int c);

int main() {
  int x = c0_fdiv(c0_to_float(1), c0_to_float(0));
  c0_print_float(x);
  return 0;
}
----
(abs_x86
 ((funcs
   (((name _c0_main)
     (blocks
      ((start@0
        ((label start@0)
         (body
          (((i (Block_params ())) (index 0) (info ([15,1]-[19,2]))
            (ann None))
           ((i (Mov (dst (Reg arg0@0)) (src (Imm 1)) (size Qword))) (index 1)
            (info (16:31)) (ann None))
           ((i
             (Call (dst arg0@1) (size Qword) (func c0_to_float)
              (args (((Temp arg0@0) Qword)))
              (call_conv
               ((name sysv) (return_reg RAX)
                (call_args (RDI RSI RDX RCX R8 R9)) (num_args_in_regs 6)
                (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
                (num_call_clobbers 7)))))
            (index 2) (info ()) (ann None))
           ((i (Mov (dst (Reg arg0@2)) (src (Imm 0)) (size Qword))) (index 3)
            (info (16:47)) (ann None))
           ((i
             (Call (dst arg1@3) (size Qword) (func c0_to_float)
              (args (((Temp arg0@2) Qword)))
              (call_conv
               ((name sysv) (return_reg RAX)
                (call_args (RDI RSI RDX RCX R8 R9)) (num_args_in_regs 6)
                (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
                (num_call_clobbers 7)))))
            (index 4) (info ()) (ann None))
           ((i
             (Call (dst tmp@4) (size Qword) (func c0_fdiv)
              (args (((Temp arg0@1) Qword) ((Temp arg1@3) Qword)))
              (call_conv
               ((name sysv) (return_reg RAX)
                (call_args (RDI RSI RDX RCX R8 R9)) (num_args_in_regs 6)
                (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
                (num_call_clobbers 7)))))
            (index 5) (info ()) (ann None))
           ((i (Mov (dst (Reg x@5)) (src (Reg tmp@4)) (size Qword)))
            (index 6) (info (16:7)) (ann None))
           ((i (Mov (dst (Reg arg0@6)) (src (Reg x@5)) (size Qword)))
            (index 7) (info (16:7)) (ann None))
           ((i
             (Call (dst effect@7) (size Qword) (func c0_print_float)
              (args (((Temp arg0@6) Qword)))
              (call_conv
               ((name sysv) (return_reg RAX)
                (call_args (RDI RSI RDX RCX R8 R9)) (num_args_in_regs 6)
                (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
                (num_call_clobbers 7)))))
            (index 8) (info ()) (ann None))
           ((i (Mov (dst (Reg ret@8)) (src (Imm 0)) (size Qword))) (index 9)
            (info (18:10)) (ann None))
           ((i (Ret (src (Reg ret@8)) (size Qword))) (index 10)
            (info (18:3-11)) (ann None))
           ((i Unreachable) (index 11) (info ([15,1]-[19,2])) (ann None))))))))
     (start start@0) (next_temp_id 9) (next_label_id 1)
     (next_stack_slot_id 0) (stack_slots ())
     (call_conv
      ((name c0) (return_reg RAX)
       (call_args (RDI RSI RCX RDX R8 R9 R10 R12 R13 R14 R15 RBX RAX))
       (num_args_in_regs 13)
       (call_clobbers (RCX RDX RBX RSI RDI R8 R9 R10 R12 R13 R14 R15))
       (num_call_clobbers 12))))))))
(func
 ((name _c0_main)
  (blocks
   ((start@0
     ((label start@0)
      (body
       (((i (Block_params ())) (index 0) (info ([15,1]-[19,2])) (ann None))
        ((i (Mov (dst (Reg arg0@0)) (src (Imm 1)) (size Qword))) (index 1)
         (info (16:31)) (ann None))
        ((i
          (Call (dst arg0@1) (size Qword) (func c0_to_float)
           (args (((Temp arg0@0) Qword)))
           (call_conv
            ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
             (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
             (num_call_clobbers 7)))))
         (index 2) (info ()) (ann None))
        ((i (Mov (dst (Reg arg0@2)) (src (Imm 0)) (size Qword))) (index 3)
         (info (16:47)) (ann None))
        ((i
          (Call (dst arg1@3) (size Qword) (func c0_to_float)
           (args (((Temp arg0@2) Qword)))
           (call_conv
            ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
             (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
             (num_call_clobbers 7)))))
         (index 4) (info ()) (ann None))
        ((i
          (Call (dst tmp@4) (size Qword) (func c0_fdiv)
           (args (((Temp arg0@1) Qword) ((Temp arg1@3) Qword)))
           (call_conv
            ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
             (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
             (num_call_clobbers 7)))))
         (index 5) (info ()) (ann None))
        ((i (Mov (dst (Reg x@5)) (src (Reg tmp@4)) (size Qword))) (index 6)
         (info (16:7)) (ann None))
        ((i (Mov (dst (Reg arg0@6)) (src (Reg x@5)) (size Qword))) (index 7)
         (info (16:7)) (ann None))
        ((i
          (Call (dst effect@7) (size Qword) (func c0_print_float)
           (args (((Temp arg0@6) Qword)))
           (call_conv
            ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
             (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
             (num_call_clobbers 7)))))
         (index 8) (info ()) (ann None))
        ((i (Mov (dst (Reg ret@8)) (src (Imm 0)) (size Qword))) (index 9)
         (info (18:10)) (ann None))
        ((i (Ret (src (Reg ret@8)) (size Qword))) (index 10) (info (18:3-11))
         (ann None))
        ((i Unreachable) (index 11) (info ([15,1]-[19,2])) (ann None))))))))
  (start start@0) (next_temp_id 9) (next_label_id 1) (next_stack_slot_id 1)
  (stack_slots ())
  (call_conv
   ((name c0) (return_reg RAX)
    (call_args (RDI RSI RCX RDX R8 R9 R10 R12 R13 R14 R15 RBX RAX))
    (num_args_in_regs 13)
    (call_clobbers (RCX RDX RBX RSI RDI R8 R9 R10 R12 R13 R14 R15))
    (num_call_clobbers 12)))))
(allocation
 ((arg0@0 RAX) (arg0@1 RAX) (arg0@2 RCX) (arg1@3 RCX) (tmp@4 RAX) (x@5 RAX)
  (arg0@6 RAX) (effect@7 RAX) (ret@8 RAX)))
((moves_before ()) (moves_after ()))
((instr (Ret (src (Reg ret@8)) (size Qword))) (uses (ret@8)) (defs ())
 (live_through ()) (clobbers ()))
((moves_before ((Mov (dst (Reg RAX@9)) (src (Reg ret@8)) (size Qword))))
 (moves_after ()))
((moves_before ()) (moves_after ()))
((instr
  (Call (dst effect@7) (size Qword) (func c0_print_float)
   (args (((Temp arg0@6) Qword)))
   (call_conv
    ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
     (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
     (num_call_clobbers 7)))))
 (uses (arg0@6)) (defs (effect@7)) (live_through ())
 (clobbers (RDI RSI RDX RCX R8 R9 R10)))
((moves_before ((Mov (dst (Reg RDI@10)) (src (Reg arg0@6)) (size Qword))))
 (moves_after ()))
((moves_before ()) (moves_after ()))
((moves_before ()) (moves_after ()))
((instr
  (Call (dst tmp@4) (size Qword) (func c0_fdiv)
   (args (((Temp arg0@1) Qword) ((Temp arg1@3) Qword)))
   (call_conv
    ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
     (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
     (num_call_clobbers 7)))))
 (uses (arg0@1 arg1@3)) (defs (tmp@4)) (live_through ())
 (clobbers (RDI RSI RDX RCX R8 R9 R10)))
((moves_before
  ((Mov (dst (Reg RSI@11)) (src (Reg arg1@3)) (size Qword))
   (Mov (dst (Reg RDI@10)) (src (Reg arg0@1)) (size Qword))))
 (moves_after ((Mov (dst (Reg tmp@4)) (src (Reg RAX@9)) (size Qword)))))
((instr
  (Call (dst arg1@3) (size Qword) (func c0_to_float)
   (args (((Temp arg0@2) Qword)))
   (call_conv
    ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
     (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
     (num_call_clobbers 7)))))
 (uses (arg0@2)) (defs (arg1@3)) (live_through (arg0@1))
 (clobbers (RDI RSI RDX RCX R8 R9 R10)))
((moves_before
  ((Mov (dst (Reg RBX@12)) (src (Reg arg0@1)) (size Qword))
   (Mov (dst (Reg RDI@10)) (src (Reg arg0@2)) (size Qword))))
 (moves_after
  ((Mov (dst (Reg arg1@3)) (src (Reg RAX@9)) (size Qword))
   (Mov (dst (Reg arg0@1)) (src (Reg RBX@12)) (size Qword)))))
((moves_before ()) (moves_after ()))
((instr
  (Call (dst arg0@1) (size Qword) (func c0_to_float)
   (args (((Temp arg0@0) Qword)))
   (call_conv
    ((name sysv) (return_reg RAX) (call_args (RDI RSI RDX RCX R8 R9))
     (num_args_in_regs 6) (call_clobbers (RDI RSI RDX RCX R8 R9 R10))
     (num_call_clobbers 7)))))
 (uses (arg0@0)) (defs (arg0@1)) (live_through ())
 (clobbers (RDI RSI RDX RCX R8 R9 R10)))
((moves_before ((Mov (dst (Reg RDI@10)) (src (Reg arg0@0)) (size Qword))))
 (moves_after ((Mov (dst (Reg arg0@1)) (src (Reg RAX@9)) (size Qword)))))
((moves_before ()) (moves_after ()))
(moves ())
((offset 0) (bottom_size 8) (frame_size 16))
asm
.text
.globl c0_main_export
c0_main_export:
    pushq %rbx
    pushq %r12
    pushq %r13
    pushq %r14
    pushq %r15
    callq _c0_main
    popq %r15
    popq %r14
    popq %r13
    popq %r12
    popq %rbx
    ret
.globl _c0_main
_c0_main:
    pushq %rbp # prologue
    movq %rsp, %rbp # prologue
    subq $16, %rsp # prologue
.Lstart_0_0:
    movq $1, %rax # 16:31
    movq %rax, %rdi # repair
    callq c0_to_float
    movq $0, %rcx # 16:47
    movq %rax, %rbx # repair
    movq %rcx, %rdi # repair
    callq c0_to_float
    movq %rax, %rcx # repair
    movq %rbx, %rax # repair
    movq %rcx, %rsi # repair
    movq %rax, %rdi # repair
    callq c0_fdiv
    movq %rax, %rdi # repair
    callq c0_print_float
    movq $0, %rax # 18:10
    movq %rax, %rax # 18:3-11
    movq %rbp, %rsp # (epilogue 18:3-11)
    popq %rbp # (epilogue 18:3-11)
    ret # (epilogue 18:3-11)

inf
0
