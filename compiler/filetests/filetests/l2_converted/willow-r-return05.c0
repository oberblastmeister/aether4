/*
(
 (kind (CompileAndRun))
)
*/

int run() {
	int iters = 7;
	int w = 3;

	int r0=0; int r1=0; int r2=0;

	r1 = 7;

	for (int iter = 0; iter < iters; iter+=1)
	{
		int nr0=0; int nr1=0; int nr2=0;
		for (int c = 0; c < w; c+=1)
		{
			
			int n = 0;
			if (c > 0) n += (r0 >> (c-1)) & 1;
			if (c < (w-1)) n += (r0 >> (c+1)) & 1;
			
			n += (r1 >> c) & 1;
			
			
			if (c>0) n += (r1 >> (c-1)) & 1;
			if (c<(w-1)) n += (r1 >> (c+1)) & 1;
			int ob = (r0 >> c) & 1;
			int b = (((n==2)&&(ob != 0)) || (n==3)) ? 1 : 0;
			nr0 |= (b << c);
			
			n = 0;
			if (c > 0) n += (r1 >> (c-1)) & 1;
			if (c < (w-1)) n += (r1 >> (c+1)) & 1;
			n += (r0 >> c) & 1;
			n += (r2 >> c) & 1;
			if (c>0) n += (r0 >> (c-1)) & 1;
			if (c<(w-1)) n += (r0 >> (c+1)) & 1;
			if (c>0) n += (r2 >> (c-1)) & 1;
			if (c<(w-1)) n += (r2 >> (c+1)) & 1;
			ob = (r1 >> c) & 1;
			b = (((n==2)&&(ob != 0)) || (n==3)) ? 1 : 0;
			nr1 |= (b << c);
			
			n = 0;
			if (c > 0) n += (r2 >> (c-1)) & 1;
			if (c < (w-1)) n += (r2 >> (c+1)) & 1;
			n += (r1 >> c) & 1;
			
			if (c>0) n += (r1 >> (c-1)) & 1;
			if (c<(w-1)) n += (r1 >> (c+1)) & 1;
			
			
			ob = (r2 >> c) & 1;
			b = (((n==2)&&(ob != 0)) || (n==3)) ? 1 : 0;
			nr2 |= (b << c);
			
		}
		r0=nr0;r1=nr1;r2=nr2;
	}

	int xor = 0;
	xor ^= r0;xor ^= r1;xor ^= r2;

	return xor;
}


void main() { assert (run() == (2)); }
----
