/*
(
 (kind (CompileAndRun))
 (emit (Lir))
)
*/

extern void c0_runtime_print_int (int x);

int sum(int[] a, int n) {
    int res = 0;
    for (int i = 0; i < n; i++) {
        res += a[i];
    }
    return res;
}

int mega_sum(int[] a, int n, int m) {
    int res = 0;
    for (int i = 0; i < m; i++) {
        res += sum(a, n);
    }
    return res;
}

int mega_sum_par(int[] a, int n, int m) {
    if (m == 0) {
        return 0;
    }
    if (m == 1) {
        return sum(a, n);
    }
    int* res1 = alloc(int);
    int* res2 = alloc(int);
    par(
        {
            *res1 = mega_sum_par(a, n, m / 2);
        },
        {
            *res2 = mega_sum_par(a, n, m - (m / 2));
        }
    );
    int res = *res1 + *res2;
    return res;
}

void main() {
    int n = 1000000;
    int m = 5000;
    int[] a = alloc_array(int, n);
    for (int i = 0; i < n; i++) {
        a[i] = i + 1;
    }
    // int res1 = mega_sum(a, n, m);
    int res2 = mega_sum_par(a, n, m);
    // c0_runtime_print_int(res1);
    // c0_runtime_print_int(res2);
    // assert (res1 == res2);
}